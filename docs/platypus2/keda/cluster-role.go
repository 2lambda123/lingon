// Copyright (c) 2023 Volvo Car Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by lingon. EDIT AS MUCH AS YOU LIKE.

package keda

import (
	rbacv1 "k8s.io/api/rbac/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

var OperatorCR = &rbacv1.ClusterRole{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/component":  "operator",
			"app.kubernetes.io/instance":   "keda",
			"app.kubernetes.io/managed-by": "Helm",
			"app.kubernetes.io/name":       "keda-operator",
			"app.kubernetes.io/part-of":    "keda-operator",
			"app.kubernetes.io/version":    "2.11.1",
			"helm.sh/chart":                "keda-2.11.1",
		},
		Name: "keda-operator",
	},
	Rules: []rbacv1.PolicyRule{
		{
			APIGroups: []string{""},
			Resources: []string{"configmaps", "configmaps/status", "events"},
			Verbs:     []string{"*"},
		}, {
			APIGroups: []string{""},
			Resources: []string{"external", "pods", "secrets", "services"},
			Verbs:     []string{"get", "list", "watch"},
		}, {
			APIGroups: []string{""},
			Resources: []string{"serviceaccounts"},
			Verbs:     []string{"list", "watch"},
		}, {
			APIGroups: []string{"*"},
			Resources: []string{"*"},
			Verbs:     []string{"get"},
		}, {
			APIGroups: []string{"*"},
			Resources: []string{"*/scale"},
			Verbs:     []string{"*"},
		}, {
			APIGroups: []string{"admissionregistration.k8s.io"},
			Resources: []string{"validatingwebhookconfigurations"},
			Verbs:     []string{"get", "list", "patch", "update", "watch"},
		}, {
			APIGroups: []string{"apiregistration.k8s.io"},
			Resources: []string{"apiservices"},
			Verbs:     []string{"get", "list", "patch", "update", "watch"},
		}, {
			APIGroups: []string{"apps"},
			Resources: []string{"deployments", "statefulsets"},
			Verbs:     []string{"list", "watch"},
		}, {
			APIGroups: []string{"autoscaling"},
			Resources: []string{"horizontalpodautoscalers"},
			Verbs:     []string{"*"},
		}, {
			APIGroups: []string{"batch"},
			Resources: []string{"jobs"},
			Verbs:     []string{"*"},
		}, {
			APIGroups: []string{"coordination.k8s.io"},
			Resources: []string{"leases"},
			Verbs:     []string{"*"},
		}, {
			APIGroups: []string{"keda.sh"},
			Resources: []string{
				"clustertriggerauthentications",
				"clustertriggerauthentications/status",
			},
			Verbs: []string{"*"},
		}, {
			APIGroups: []string{"keda.sh"},
			Resources: []string{
				"scaledjobs",
				"scaledjobs/finalizers",
				"scaledjobs/status",
			},
			Verbs: []string{"*"},
		}, {
			APIGroups: []string{"keda.sh"},
			Resources: []string{
				"scaledobjects",
				"scaledobjects/finalizers",
				"scaledobjects/status",
			},
			Verbs: []string{"*"},
		}, {
			APIGroups: []string{"keda.sh"},
			Resources: []string{
				"triggerauthentications",
				"triggerauthentications/status",
			},
			Verbs: []string{"*"},
		},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "rbac.authorization.k8s.io/v1",
		Kind:       "ClusterRole",
	},
}

var OperatorExternalMetricsReaderCR = &rbacv1.ClusterRole{
	ObjectMeta: metav1.ObjectMeta{
		Labels: map[string]string{
			"app.kubernetes.io/component":  "operator",
			"app.kubernetes.io/instance":   "keda",
			"app.kubernetes.io/managed-by": "Helm",
			"app.kubernetes.io/name":       "keda-operator-external-metrics-reader",
			"app.kubernetes.io/part-of":    "keda-operator",
			"app.kubernetes.io/version":    "2.11.1",
			"helm.sh/chart":                "keda-2.11.1",
		},
		Name: "keda-operator-external-metrics-reader",
	},
	Rules: []rbacv1.PolicyRule{
		{
			APIGroups: []string{"external.metrics.k8s.io"},
			Resources: []string{"*"},
			Verbs:     []string{"*"},
		},
	},
	TypeMeta: metav1.TypeMeta{
		APIVersion: "rbac.authorization.k8s.io/v1",
		Kind:       "ClusterRole",
	},
}
